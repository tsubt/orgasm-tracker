import type {
  GetServerSideProps,
  InferGetServerSidePropsType,
  NextPage,
} from "next";
import Head from "next/head";

import { trpc } from "../utils/trpc";

const StatsPage: NextPage<
  InferGetServerSidePropsType<typeof getServerSideProps>
> = ({ title }) => {
  const { data: userCount, isLoading: countLoading } =
    trpc.stats.userCount.useQuery();

  const { data: orgasmCount, isLoading: orgasmCountLoading } =
    trpc.stats.orgasmCount.useQuery();

  const stats = [
    {
      title: "Users",
      value: countLoading ? "?" : ((userCount || "unknown") as string),
    },
    {
      title: "Orgasms",
      value: orgasmCountLoading ? "?" : ((orgasmCount || "unknown") as string),
    },
  ];

  return (
    <>
      <Head>
        <title>OrgasmTracker | Stats</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-pink-700 to-pink-900">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            {title}
          </h1>

          <h2 className="text-lg font-bold uppercase tracking-wider text-white">
            Statistics
          </h2>

          <div className="flex justify-center gap-8 text-center text-white">
            {stats.map((stat) => (
              <div key={stat.title}>
                <div className="text-bold text-4xl">{stat.value}</div>
                <div className="">{stat.title}</div>
              </div>
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default StatsPage;

export const getServerSideProps: GetServerSideProps = async () => {
  return {
    props: {
      title: process.env.APP_TITLE || "Orgasm Tracker",
    },
  };
};
