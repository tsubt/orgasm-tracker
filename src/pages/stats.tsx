import type { GetServerSideProps, InferGetServerSidePropsType } from "next";
import Head from "next/head";
import { prisma } from "../server/db/client";

export default function StatsPage({
  userCount,
  orgasmCount,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  const stats = [
    {
      title: "User" + (userCount === 1 ? "" : "s"),
      value: userCount, //countLoading ? "?" : ((userCount || "unknown") as string),
    },
    {
      title: "Orgasm" + (orgasmCount === 1 ? "" : "s"),
      value: orgasmCount, //orgasmCountLoading ? "?" : ((orgasmCount || "unknown") as string),
    },
  ];

  return (
    <>
      <Head>
        <title>OrgasmTracker | Stats</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16">
        <h2 className="text-lg font-bold uppercase tracking-wider text-white">
          Statistics
        </h2>

        <div className="flex justify-center gap-8 text-center text-white">
          {stats.map((stat) => (
            <div key={stat.title}>
              <div className="text-bold text-4xl">{stat.value}</div>
              <div className="">{stat.title}</div>
            </div>
          ))}
        </div>
      </div>
    </>
  );
}

type Props = {
  userCount: number;
  orgasmCount: number;
};
export const getServerSideProps: GetServerSideProps<Props> = async ({
  res,
}) => {
  res.setHeader("Cache-Control", "s-maxage=60, stale-while-revalidate=3600");

  const userCount = await prisma.user.count();
  const orgasmCount = await prisma.orgasm.count();

  return {
    props: {
      userCount: userCount,
      orgasmCount: orgasmCount,
    },
  };
};
