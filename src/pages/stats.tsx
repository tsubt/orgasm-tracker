import type { NextPage } from "next";
import Head from "next/head";

import { trpc } from "../utils/trpc";

const StatsPage: NextPage = () => {
  const { data: userCount, isLoading: countLoading } =
    trpc.stats.userCount.useQuery();

  const { data: orgasmCount, isLoading: orgasmCountLoading } =
    trpc.stats.orgasmCount.useQuery();

  const stats = [
    {
      title: "User" + (userCount === 1 ? "" : "s"),
      value: countLoading ? "?" : ((userCount || "unknown") as string),
    },
    {
      title: "Orgasm" + (orgasmCount === 1 ? "" : "s"),
      value: orgasmCountLoading ? "?" : ((orgasmCount || "unknown") as string),
    },
  ];

  return (
    <>
      <Head>
        <title>OrgasmTracker | Stats</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16">
        <h2 className="text-lg font-bold uppercase tracking-wider text-white">
          Statistics
        </h2>

        <div className="flex justify-center gap-8 text-center text-white">
          {stats.map((stat) => (
            <div key={stat.title}>
              <div className="text-bold text-4xl">{stat.value}</div>
              <div className="">{stat.title}</div>
            </div>
          ))}
        </div>
      </div>
    </>
  );
};

export default StatsPage;
